:root {
    --tomtatoGreen : rgb(123, 209, 123);
}



body {
    background-color:#aa402e ;
}

.timerButtons {
    display : flex;
    justify-content: center;
    gap: 2.5em;
    margin-top: 5em;
   
}

.button {
    background-color: #103d02;
    color: wheat;
    box-shadow: 0;
    width: 6em;
    height: 3em;
    border: none;
	padding: 0;
	font: inherit;
	cursor: pointer;
	outline: inherit;
    border-radius: 2em;
}

.curvedText {
    text-align: center;
     padding-top: 50px;

     font-size: 55px;
    color: var(--tomtatoGreen);
}

.timerDisplay {
    display: flex;
    justify-content: center;
    align-items: center;
    color : var(--tomtatoGreen);
    font-size: 5em;
    
}

.victoryPic {
    
}



































 /* Apply the translate and rotate transformation
           for our text to look curved  */
  
           .G1 {
            transform: translate(20px, 85px) rotate(-30deg);
        }
  
        .e1 {
            transform: translate(13px, 60px) rotate(-25deg);
        }
  
        .e2 {
            transform: translate(6px, 40px) rotate(-20deg);
        }
  
        .k1 {
            transform: translate(3px, 23px) rotate(-15deg);
        }
  
        .s1 {
            transform: translate(2px, 14px) rotate(-10deg);
        }
  
        .f {
            transform: translate(1px, 8px) rotate(-5deg);
        }
  
        .o {
            transform: translate(0px, 5px) rotate(0deg);
        }
  
        .r {
            transform: translate(-1px, 8px) rotate(5deg);
        }
  
        .G2 {
            transform: translate(-2px, 14px) rotate(10deg);
        }
  
        .e3 {
            transform: translate(-3px, 25px) rotate(15deg);
        }
  
        .e4 {
            transform: translate(-6px, 40px) rotate(20deg);
        }
  
        .k2 {
            transform: translate(-14px, 60px) rotate(25deg);
        }
  
        .s2 {
            transform: translate(-20px, 80px) rotate(30deg);
        }

        .s3 {
            transform: translate(-30px, 92px) rotate(35deg);
        }
  
        /* An inline-block element is placed as an inline
         element (on the same line as adjacent content), 
         but it behaves like a block element  */
  
        span {
            display: inline-block;
        }